//Well this fella puts us in protected mode at 1M UwU
 qemu-system-x86_64 -m 64M -kernel kernel.elf -s -S &

 http://www.osdever.net/bkerndev/Docs/pit.htm


Paging
    A page directory 1024 PageTables, each table 1024 pageFrame, each frame is 4096 Byte
PAge directory entry:

    [31..11] = page table 4-kb aligned address << 12
    [11..9] = Availability
    [8] = ingnored
    [7] = Pagesize, 0 for 4kb  
    [6] = 0
    [5] = Accesed
    [4] = Cache disabled
    [3] = Write through
    [2] = User/Supervisor
    [1] = Read/Write
    [0] = present

//
    used by the virtual memory system to store the mapping between logical addresses and physical addresses.
//
Page Table entry:  

    [31..11] = page table 4-kb aligned address
    [11..9] = Availability
    [8] = Global
    [7] = 0
    [6] = Dirty
    [5] = Accesed
    [4] = Cache disabled
    [3] = Write through
    [2] = User/Supervisor
    [1] = Read/Write
    [0] = present


An instruction that can be used when updating a PD or PT is invlpg. It invalidates the Translation Lookaside Buffer (TLB) entry for a virtual address. The TLB is a cache for translated addresses, mapping physical addresses corresponding to virtual addresses. This instruction is only required if we have to change a PDE or PTE that was previously mapped to something else. If the PDE or PTE had previously been marked as absent, executing invlpg instruction is unnecessary. Changing the value of cr3 will cause all entries in the TLB to be invalidated.

Invalidating a TLB entry can be presented as below:

; invalidate any TLB references to virtual address 0
invlpg [0]



In a virtual (linear) address, the highest 10 bits specifies the offset of a page directory entry (PDE) in the current PD, the next 10 bits the offset of a page table entry (PTE) within the page table pointed to by that PDE. The lowest 12 bits in the address is the offset within the page frame to be addressed.

    [31..22]= Directory
    [21..12]= Table
    [11..0]= Offset

Identity paging:
    mapping virtual addresses to physical addresses that have the same value

Compiling for usermode:
-m32 -nostdlib -nostdinc -fno-builtin -fno-stack-protector -nostartfiles -nodefaultlibs